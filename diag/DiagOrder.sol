// SPDX-License-Identifier: CAL
pragma solidity >=0.6.0;

import {Script} from "../lib/forge-std/src/Script.sol";

contract DiagOrder is Script {
    function run() external {
        address to = 0x7357ff3b3781e974FEafc8Ad32e9CA7b846334D8; // put arb contract address
        address from = 0x7177b9d00bB5dbcaaF069CC63190902763783b09;
        vm.startPrank(from);
        bytes memory data = hex"7ea0b76a0000000000000000000000007d2f700b1f6fd75734824ea4578960747bdf269a00000000000000000000000000000000000000000000000000000000000000600000000000000000000000000000000000000000000000000000000000000b40000000000000000000000000000000000000000000000000000000000000000100000000000000000000000000000000000000000000000ad78ebc5ac6200000ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff00000000000000000000000000000000000000000000000000000000000000a00000000000000000000000000000000000000000000000000000000000000a200000000000000000000000000000000000000000000000000000000000000001000000000000000000000000000000000000000000000000000000000000002000000000000000000000000000000000000000000000000000000000000000800000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000100000000000000000000000000000000000000000000000000000000000009200000000000000000000000007c172bd11a77532ca4e29006d755ad72c5781a0500000000000000000000000000000000000000000000000000000000000000a000000000000000000000000000000000000000000000000000000000000006e000000000000000000000000000000000000000000000000000000000000007c09f12322c4061dd205f2467e086348e0b5fe038a7e940bd2c7eff099d35dc0f7f000000000000000000000000c1a14ce2fd58a3a2f99decb8edd866204ee07f8d000000000000000000000000fa4989f5d49197fd9673ce4b7fe2a045a0f2f9c8000000000000000000000000000000000000000000000000000000000000006000000000000000000000000000000000000000000000000000000000000005a3000000000000000000000000000000000000000000000000000000000000000e00000000000000000000000000000000000000000000000ad78ebc5ac62000000000000000000000000000000000000000000000000000000c7d713b49da0000914d696e20747261646520616d6f756e742e000000000000000000000000000000000000000000000000000000000000000000000000018650127cc3dc8000000000000000000000000000000000000000000000000000000df27a2cdf44800000000000000000000000000000000000000000000000003635c9adc5dea000008f6c6173742d74726164652d74696d65000000000000000000000000000000008d6c6173742d74726164652d696f000000000000000000000000000000000000976c6173742d74726164652d6f75747075742d746f6b656e0000000000000000000000000000000000000000b5c064f955d8e7f38fe0460c556a72987494ee1793636f73742d62617369732d696f2d726174696f00000000000000000000000000000003b58e88c75313ec9d329eaaa18fb92f75215b1710000000000000000000000000000000000000000000000000000000000000000006f05b59d3b200000000000000000000000000000000000000000000000000008ac7230489e8000000000000000000000000000000000000000000000000000000000000000003a30b00000028005c007c00d4011c015c016c02ac02fc0348090500040b100002001000000b11000300100001001000000b12000400100001001000010b0100050c06000101100001011000003d120000011000020010000003100403031004040b10000622130000211200001d0200000b000007070500040b200008001000001a1000004712000001100003001000022e120000150a01090b1000080b1000090110000400100001001000023a1200003d12000000100001001000021b120000001000040010000347120000001000000b11000a00100006001000053d12000000100007001000042b12000011080206001000000b11000a01100000011000054712000000100002001000033d120000011000002b1200000010000136110000001000043d120000001000040b100006221300000f0401011a10000001100006031000010c1200004a0200000010000001100007031000010c1200004a0200000310000401100008031000010c1200004a0200000302000103100004011000091e1200004f1400120310000303100004031000010c1300000110000a0310000303100004031000010c1400000010000049110000001000014911000003100403001000023b12000000100004001000024712000000100005001000004a02000000100003001000051f120000001000014a0200000310000403100003031000010c1300000110000a0310000403100003031000010c1400000010000649110000001000074911000000100009001000083d1200000010000403100403471200000010000b0010000a2b120000031001020010000b2e1200000010000d001000082b120000181000000010000e1b1200000010000c2e1200000010000e1f120000031001020010000f1b1200000110000b2e1200000110000b0b10000622130000001000100010000e3b12000000100011001000064a0200000010000f001000074a0200001307000401100007031000010c1200004911000001100008031000010c1200004911000001100006031000010c1200004911000000100000361100000010000003100004001000011e12000022130000120500030110000a0310000403100003031000010c140000491100000110000a0310000303100004031000010c1400004911000018100000001000011b12000036110000001000001b120000100c01030110000d001000002e1200000110000c3e120000001000010010000100100001001000010010000100100001001000010010000100100001001000013d1a000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000002000000000000000000000000831753dd7087cac61ab5644b308642cc1c33dc1300000000000000000000000000000000000000000000000000000000000000125067d936a7e6a1490067ff32fd7f9606cb58ab561fe5c555bfec6de7eda27a57000000000000000000000000b5c064f955d8e7f38fe0460c556a72987494ee1700000000000000000000000000000000000000000000000000000000000000125067d936a7e6a1490067ff32fd7f9606cb58ab561fe5c555bfec6de7eda27a570000000000000000000000000000000000000000000000000000000000000002000000000000000000000000831753dd7087cac61ab5644b308642cc1c33dc1300000000000000000000000000000000000000000000000000000000000000125067d936a7e6a1490067ff32fd7f9606cb58ab561fe5c555bfec6de7eda27a57000000000000000000000000b5c064f955d8e7f38fe0460c556a72987494ee1700000000000000000000000000000000000000000000000000000000000000125067d936a7e6a1490067ff32fd7f9606cb58ab561fe5c555bfec6de7eda27a57000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000a00000000000000000000000000000000000000000000000000000000000000020000000000000000000000000000000000000000000000000000000000000004202b5c064f955d8e7f38fe0460c556a72987494ee1701ffff011d7f2e4295981af5cc005d936ac437588b353596007357ff3b3781e974feafc8ad32e9ca7b846334d8000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000004000000000000000000000000000000000000000000000000000000000000001c0000000000000000000000000c1a14ce2fd58a3a2f99decb8edd866204ee07f8d000000000000000000000000fa4989f5d49197fd9673ce4b7fe2a045a0f2f9c8000000000000000000000000000000000000000000000000000000000000006000000000000000000000000000000000000000000000000000000000000000fb0000000000000000000000000000000000000000000000000000000000000004000000000000000000000000000000000000000000000005be303f2ad6138000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000001674e3be64a5410956d696e696d756d2073656e646572206f757470757400000000000000000000000000000000000000000000000000000000000000000000000000000000003b0100000d06000203100001011000003d12000003100101011000013d120000011000030110000200100001001000002b120000211200001d02000000000000000000000000000000000000000000000000000000000000000000000000000000"; // put calldata here without 0x
        (bool success, bytes memory result) = to.call(data);
        (success, result);
    }
}